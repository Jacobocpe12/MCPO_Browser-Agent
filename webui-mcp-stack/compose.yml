version: "3.9"

networks:
  mcpnet:
    name: mcpnet

services:
  playwright-mcp:
    image: mcr.microsoft.com/playwright/mcp:latest
    container_name: playwright-mcp
    shm_size: "2g"
    entrypoint: ["node", "cli.js"]
    command:
      [
        "--headless",
        "--browser", "chromium",
        "--no-sandbox",
        "--host", "0.0.0.0",
        "--port", "8931",
        "--user-data-dir", "/pw-user-data",
        "--isolated",
        "--allowed-hosts", "*",
        "--allowed-origins", "*",
        "--caps=vision,pdf,install"
      ]
    volumes:
      - /srv/exports:/tmp/playwright-output
    networks:
      - mcpnet
    restart: unless-stopped

  ui-tars-mcp:
    image: node:22-slim
    container_name: ui-tars-mcp
    shm_size: "1g"
    environment:
      - LANG=en_US.UTF-8
      - NODE_ENV=production
    command: >-
      bash -c "
      set -euo pipefail;
      apt-get update;
      apt-get install -y wget gnupg ca-certificates fonts-liberation libxss1 dbus dbus-x11;
      wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg;
      echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google.list;
      apt-get update;
      apt-get install -y google-chrome-stable;
      npm install -g @agent-infra/mcp-server-browser@latest;
      mcp-server-browser --port 8000;
      "
    networks:
      - mcpnet
    restart: unless-stopped

  playwright-vision-mcp:
    build:
      context: ./playwright-vision-mcp
    image: playwright-vision-mcp:latest
    container_name: playwright-vision-mcp
    environment:
      - OPENAI_API_KEY=${api_key}
      - PORT=8500
      - SCREENSHOT_DIR=/exports/screenshots
    volumes:
      - /srv/exports:/exports:rw
    networks:
      - mcpnet
    restart: unless-stopped

  mcpo:
    build:
      context: ./mcpo
    image: mcpo-browser-agent:latest
    container_name: mcpo
    depends_on:
      - playwright-mcp
      - ui-tars-mcp
      - playwright-vision-mcp
    volumes:
      - ./mcpo:/config
      - /srv/exports:/exports:ro
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    entrypoint: ["/bin/sh", "-c"]
    command:
      - >
        mkdir -p /config &&
        if [ ! -f /config/config.json ]; then
          echo '{
            "mcpServers": {
              "mcp_playwright": {
                "type": "streamable-http",
                "url": "http://playwright-mcp:8931/mcp"
              },
              "mcp_tars": {
                "type": "streamable-http",
                "url": "http://ui-tars-mcp:8000/mcp"
              },
              "mcp_playwright_vision": {
                "type": "streamable-http",
                "url": "http://playwright-vision-mcp:8500/mcp"
              }
            }
          }' > /config/config.json;
        fi &&
        echo "âœ… Config ready at /config/config.json" &&
        mkdir -p /tmp/playwright-output &&
        chown -R 10042:10042 /tmp/playwright-output &&
        chmod -R 777 /tmp/playwright-output &&
        exec mcpo --config /config/config.json --host 0.0.0.0 --port 3879
    ports:
      - "3880:3879"
    networks:
      - mcpnet
    restart: unless-stopped



  pipelines:
    image: ghcr.io/open-webui/pipelines:latest
    container_name: pipelines
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
    volumes:
      - ${PIPELINES_PATH:-./pipelines}:/app/pipelines
    ports:
      - "9099:9099"
    networks:
      - mcpnet

  screenshot-viewer:
    image: nginx:alpine
    container_name: screenshot-viewer
    depends_on:
      - playwright-mcp
    volumes:
      - /srv/exports:/usr/share/nginx/html:ro
    ports:
      - "3888:80"
    networks:
      - mcpnet
    restart: unless-stopped

  langflow:
    image: langflowai/langflow:latest
    container_name: langflow
    environment:
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER:-admin}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD:-changeme}
      - LANGFLOW_DATABASE_URL=${LANGFLOW_DATABASE_URL:-sqlite:////app/langflow/langflow.db}
    volumes:
      - langflow-data:/app/langflow
    ports:
      - "7860:7860"
    networks:
      - mcpnet
    restart: unless-stopped

volumes:
  langflow-data:
